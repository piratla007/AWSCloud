{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "CloudFormation Template to provision an EMR Cluster",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Subnet and KeyPair Config"
          },
          "Parameters": [
            "SubnetID",
            "SSHKeyName"
          ]
        }
      ]
    }
  },
  "Parameters": {
    "SSHKeyName": {
      "Default": "N Virginia",
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances, if list is empty create one before hand",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "SubnetID": {
      "Description": "Select One of the available Subnet from Drop down list",
      "Type": "AWS::EC2::Subnet::Id"
    }
  },
  "Resources": {
    "LogBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {}
    },
    "EMRCluster": {
      "DependsOn": [
        "EMRDefaultRole"
      ],
      "Type": "AWS::EMR::Cluster",
      "Properties": {
        "Instances": {
          "MasterInstanceGroup": {
            "InstanceCount": 1,
            "InstanceType": "m1.medium",
            "Market": "ON_DEMAND",
            "Name": "Master"
          },
          "CoreInstanceGroup": {
            "InstanceCount": 1,
            "InstanceType": "m1.medium",
            "Market": "ON_DEMAND",
            "Name": "Core"
          },
          "TerminationProtected": false,
          "Ec2SubnetId": {
            "Ref": "SubnetID"
          },
          "Ec2KeyName": {
            "Ref": "SSHKeyName"
          }
        },
        "Name": "EMRCluster",
        "JobFlowRole": "EMR_EC2_DefaultRole",
        "ServiceRole": {
          "Ref": "EMRDefaultRole"
        },
        "Configurations": [
          {
            "Classification": "hive-site",
            "ConfigurationProperties": {
              "hive.exec.max.dynamic.partitions.pernode": "1000"
            },
            "Configurations": []
          }
        ],
        "ReleaseLabel": "emr-5.9.0",
        "Applications": [
          {
            "Name": "Hadoop"
          },
          {
            "Name": "Hive"
          },
          {
            "Name": "Spark"
          },
          {
            "Name": "Pig"
          },
          {
            "Name": "ZooKeeper"
          },
          {
            "Name": "Hue"
          },
          {
            "Name": "Zeppelin"
          },
          {
            "Name": "Ganglia"
          },
          {
            "Name": "Presto"
          },
          {
            "Name": "OOzie"
          }
        ],
        "Tags": [
          {
            "Key": "IsTest",
            "Value": "True"
          }
        ]
      }
    },
    "EMRDefaultRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "elasticmapreduce.amazonaws.com"
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "EMRDefaultPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Resource": "*",
                  "Action": [
                    "ec2:AuthorizeSecurityGroupEgress",
                    "ec2:AuthorizeSecurityGroupIngress",
                    "ec2:CancelSpotInstanceRequests",
                    "ec2:CreateNetworkInterface",
                    "ec2:CreateSecurityGroup",
                    "ec2:CreateTags",
                    "ec2:DeleteNetworkInterface",
                    "ec2:DeleteSecurityGroup",
                    "ec2:DeleteTags",
                    "ec2:DescribeAvailabilityZones",
                    "ec2:DescribeAccountAttributes",
                    "ec2:DescribeDhcpOptions",
                    "ec2:DescribeInstanceStatus",
                    "ec2:DescribeInstances",
                    "ec2:DescribeKeyPairs",
                    "ec2:DescribeNetworkAcls",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DescribePrefixLists",
                    "ec2:DescribeRouteTables",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DescribeSpotInstanceRequests",
                    "ec2:DescribeSpotPriceHistory",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeVpcAttribute",
                    "ec2:DescribeVpcEndpoints",
                    "ec2:DescribeVpcEndpointServices",
                    "ec2:DescribeVpcs",
                    "ec2:DetachNetworkInterface",
                    "ec2:ModifyImageAttribute",
                    "ec2:ModifyInstanceAttribute",
                    "ec2:RequestSpotInstances",
                    "ec2:RevokeSecurityGroupEgress",
                    "ec2:RunInstances",
                    "ec2:TerminateInstances",
                    "ec2:DeleteVolume",
                    "ec2:DescribeVolumeStatus",
                    "ec2:DescribeVolumes",
                    "ec2:DetachVolume",
                    "iam:GetRole",
                    "iam:GetRolePolicy",
                    "iam:ListInstanceProfiles",
                    "iam:ListRolePolicies",
                    "iam:PassRole",
                    "s3:CreateBucket",
                    "s3:Get*",
                    "s3:List*",
                    "sdb:BatchPutAttributes",
                    "sdb:Select",
                    "sqs:CreateQueue",
                    "sqs:Delete*",
                    "sqs:GetQueue*",
                    "sqs:PurgeQueue",
                    "sqs:ReceiveMessage",
                    "cloudwatch:PutMetricAlarm",
                    "cloudwatch:DescribeAlarms",
                    "cloudwatch:DeleteAlarms",
                    "application-autoscaling:RegisterScalableTarget",
                    "application-autoscaling:DeregisterScalableTarget",
                    "application-autoscaling:PutScalingPolicy",
                    "application-autoscaling:DeleteScalingPolicy",
                    "application-autoscaling:Describe*"
                  ]
                }
              ]
            }
          }
        ]
      }
    }
  }
}
